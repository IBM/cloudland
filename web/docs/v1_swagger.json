{
    "swagger": "2.0",
    "info": {
        "description": "APIs for CloudLand Functions",
        "title": "CloudLand API",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/flavors": {
            "get": {
                "description": "list flavors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "list flavors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.FlavorListResponse"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "create a flavor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "create a flavor",
                "parameters": [
                    {
                        "description": "Flavor create payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.FlavorPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.FlavorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/flavors/:id": {
            "get": {
                "description": "get a flavor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "get a flavor",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.FlavorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a flavor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "delete a flavor",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "patch": {
                "description": "patch a flavor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "patch a flavor",
                "parameters": [
                    {
                        "description": "Flavor patch payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.FlavorPatchPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.FlavorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/floating_ips": {
            "get": {
                "description": "list floating ips",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "list floating ips",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.FloatingIpListResponse"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "create a floating ip",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "create a floating ip",
                "parameters": [
                    {
                        "description": "Floating ip create payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.FloatingIpPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.FloatingIpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/floating_ips/:id": {
            "get": {
                "description": "get a floating ip",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "get a floating ip",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.FloatingIpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a floating ip",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "delete a floating ip",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "patch": {
                "description": "patch a floating ip",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "patch a floating ip",
                "parameters": [
                    {
                        "description": "Floating ip patch payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.FloatingIpPatchPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.FloatingIpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/hypers": {
            "get": {
                "description": "list hypervisors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Administration"
                ],
                "summary": "list hypervisors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.HyperListResponse"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/hypers/:id": {
            "get": {
                "description": "get a hypervisor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Administration"
                ],
                "summary": "get a hypervisor",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.HyperResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/images": {
            "get": {
                "description": "list images",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "list images",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.ImageListResponse"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "create a image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "create a image",
                "parameters": [
                    {
                        "description": "Image create payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.ImagePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.ImageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/images/:id": {
            "get": {
                "description": "get a image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "get a image",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.ImageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "delete a image",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "patch": {
                "description": "patch a image",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "patch a image",
                "parameters": [
                    {
                        "description": "Image patch payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.ImagePatchPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.ImageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/instances": {
            "get": {
                "description": "list instances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "list instances",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.InstanceListResponse"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "create a instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "create a instance",
                "parameters": [
                    {
                        "description": "Instance create payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.InstancePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.InstanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/instances/:id": {
            "get": {
                "description": "get a instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "get a instance",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.InstanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "delete a instance",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "patch": {
                "description": "patch a instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "patch a instance",
                "parameters": [
                    {
                        "description": "Instance patch payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.InstancePatchPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.InstanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/interfaces": {
            "get": {
                "description": "list interfaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "list interfaces",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/apis.InterfaceResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "create a interface",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "create a interface",
                "parameters": [
                    {
                        "description": "Interface create payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.InterfacePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.InterfaceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/interfaces/:id": {
            "get": {
                "description": "get a interface",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "get a interface",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.InterfaceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a interface",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "delete a interface",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "patch": {
                "description": "patch a interface",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "patch a interface",
                "parameters": [
                    {
                        "description": "Interface patch payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.InterfacePatchPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.InterfaceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/keys": {
            "get": {
                "description": "list keys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "list keys",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.KeyListResponse"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "create a key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "create a key",
                "parameters": [
                    {
                        "description": "Key create payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.KeyPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.KeyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/keys/:id": {
            "get": {
                "description": "get a key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "get a key",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.KeyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "delete a key",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "patch": {
                "description": "patch a key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "patch a key",
                "parameters": [
                    {
                        "description": "Key patch payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.KeyPatchPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.KeyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "get token by user name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "login to get the accesstoken",
                "parameters": [
                    {
                        "description": "User Credential",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.UserPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.UserResponse"
                        }
                    },
                    "401": {
                        "description": "Invalied user name or password",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/orgs": {
            "get": {
                "description": "list orgs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "list orgs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.OrgListResponse"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "create a org",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "create a org",
                "parameters": [
                    {
                        "description": "Org create payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.OrgPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.OrgResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/orgs/:id": {
            "get": {
                "description": "get a org",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "get a org",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.OrgResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a org",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "delete a org",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "patch": {
                "description": "patch a org",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "patch a org",
                "parameters": [
                    {
                        "description": "Org patch payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.OrgPatchPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.OrgResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/security_groups": {
            "get": {
                "description": "list secgroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "list secgroups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.SecgroupListResponse"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "create a secgroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "create a secgroup",
                "parameters": [
                    {
                        "description": "Secgroup create payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.SecgroupPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.SecgroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/security_groups/:id": {
            "get": {
                "description": "get a secgroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "get a secgroup",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.SecgroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a secgroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "delete a secgroup",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "patch": {
                "description": "patch a secgroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "patch a secgroup",
                "parameters": [
                    {
                        "description": "Secgroup patch payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.SecgroupPatchPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.SecgroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/security_groups/:id/rules": {
            "get": {
                "description": "list secrules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "list secrules",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.SecruleListResponse"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "create a secrule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "create a secrule",
                "parameters": [
                    {
                        "description": "Secrule create payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.SecrulePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.SecruleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/security_groups/:id/rules/:rule_id": {
            "get": {
                "description": "get a secrule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "get a secrule",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.SecruleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a secrule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "delete a secrule",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "patch": {
                "description": "patch a secrule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "patch a secrule",
                "parameters": [
                    {
                        "description": "Secrule patch payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.SecrulePatchPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.SecruleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/subnets": {
            "get": {
                "description": "list subnets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "list subnets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.SubnetListResponse"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "create a subnet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "create a subnet",
                "parameters": [
                    {
                        "description": "Subnet create payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.SubnetPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.SubnetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/subnets/:id": {
            "get": {
                "description": "get a subnet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "get a subnet",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.SubnetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a subnet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "delete a subnet",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "patch": {
                "description": "patch a subnet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "patch a subnet",
                "parameters": [
                    {
                        "description": "Subnet patch payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.SubnetPatchPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.SubnetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "list users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "list users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.UserListResponse"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "create a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "create a user",
                "parameters": [
                    {
                        "description": "User create payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.UserPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/users/:id": {
            "get": {
                "description": "get a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "get a user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "delete a user",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "patch": {
                "description": "patch a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "patch a user",
                "parameters": [
                    {
                        "description": "User patch payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.UserPatchPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/volumes": {
            "get": {
                "description": "list volumes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "list volumes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.VolumeListResponse"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "create a volume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "create a volume",
                "parameters": [
                    {
                        "description": "Volume create payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.VolumePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.VolumeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/volumes/:id": {
            "get": {
                "description": "get a volume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "get a volume",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.VolumeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a volume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "delete a volume",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "patch": {
                "description": "patch a volume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compute"
                ],
                "summary": "patch a volume",
                "parameters": [
                    {
                        "description": "Volume patch payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.VolumePatchPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.VolumeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/vpcs": {
            "get": {
                "description": "list vpcs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "list vpcs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.VPCListResponse"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "create a vpc",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "create a vpc",
                "parameters": [
                    {
                        "description": "VPC create payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.VPCPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.VPCResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        },
        "/vpcs/:id": {
            "get": {
                "description": "get a vpc",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "get a vpc",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.VPCResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a vpc",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "delete a vpc",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            },
            "patch": {
                "description": "patch a vpc",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Network"
                ],
                "summary": "patch a vpc",
                "parameters": [
                    {
                        "description": "VPC patch payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.VPCPatchPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apis.VPCResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/apis.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apis.APIError": {
            "type": "object",
            "properties": {
                "error_message": {
                    "type": "string"
                }
            }
        },
        "apis.BaseReference": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "apis.FlavorListResponse": {
            "type": "object",
            "properties": {
                "flavors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.VPCResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "apis.FlavorPatchPayload": {
            "type": "object"
        },
        "apis.FlavorPayload": {
            "type": "object"
        },
        "apis.FlavorResponse": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "integer"
                },
                "disk": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "memory": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "apis.FloatingIpInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "apis.FloatingIpListResponse": {
            "type": "object",
            "properties": {
                "floatingIps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.FloatingIpResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "apis.FloatingIpPatchPayload": {
            "type": "object"
        },
        "apis.FloatingIpPayload": {
            "type": "object"
        },
        "apis.FloatingIpResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "apis.HyperListResponse": {
            "type": "object",
            "properties": {
                "hypers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.VPCResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "apis.HyperResponse": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "integer"
                },
                "disk": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "memory": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "apis.ImageListResponse": {
            "type": "object",
            "properties": {
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.VPCResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "apis.ImagePatchPayload": {
            "type": "object"
        },
        "apis.ImagePayload": {
            "type": "object"
        },
        "apis.ImageResponse": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "integer"
                },
                "disk": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "memory": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "apis.InstanceListResponse": {
            "type": "object",
            "properties": {
                "instances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.InstanceResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "apis.InstancePatchPayload": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string"
                },
                "power_action": {
                    "$ref": "#/definitions/apis.PowerAction"
                }
            }
        },
        "apis.InstancePayload": {
            "type": "object",
            "properties": {
                "flavor": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.InterfacePayload"
                    }
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "apis.InstanceResponse": {
            "type": "object",
            "properties": {
                "flavor": {
                    "$ref": "#/definitions/apis.BaseReference"
                },
                "hostname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#/definitions/apis.BaseReference"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.InterfaceResponse"
                    }
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.BaseReference"
                    }
                },
                "status": {
                    "type": "string"
                },
                "vpc": {
                    "$ref": "#/definitions/apis.BaseReference"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "apis.InterfacePatchPayload": {
            "type": "object"
        },
        "apis.InterfacePayload": {
            "type": "object"
        },
        "apis.InterfaceResponse": {
            "type": "object",
            "properties": {
                "floating_ips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.FloatingIpInfo"
                    }
                },
                "id": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "is_primary": {
                    "type": "boolean"
                },
                "mac_address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "subnet": {
                    "$ref": "#/definitions/apis.BaseReference"
                }
            }
        },
        "apis.KeyListResponse": {
            "type": "object",
            "properties": {
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.VPCResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "apis.KeyPatchPayload": {
            "type": "object"
        },
        "apis.KeyPayload": {
            "type": "object"
        },
        "apis.KeyResponse": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "integer"
                },
                "disk": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "memory": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "apis.OrgListResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "orgs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.OrgResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "apis.OrgPatchPayload": {
            "type": "object"
        },
        "apis.OrgPayload": {
            "type": "object"
        },
        "apis.OrgResponse": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "integer"
                },
                "disk": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "memory": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "apis.PowerAction": {
            "type": "string",
            "enum": [
                "stop",
                "hard_stop",
                "start",
                "restart",
                "hard_restart",
                "pause",
                "unpause"
            ],
            "x-enum-varnames": [
                "Stop",
                "HardStop",
                "Start",
                "Restart",
                "HardRestart",
                "Pause",
                "Unpause"
            ]
        },
        "apis.SecgroupListResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "secgroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.VPCResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "apis.SecgroupPatchPayload": {
            "type": "object"
        },
        "apis.SecgroupPayload": {
            "type": "object"
        },
        "apis.SecgroupResponse": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "integer"
                },
                "disk": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "memory": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "apis.SecruleListResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "secrules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.VPCResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "apis.SecrulePatchPayload": {
            "type": "object"
        },
        "apis.SecrulePayload": {
            "type": "object"
        },
        "apis.SecruleResponse": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "integer"
                },
                "disk": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "memory": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "apis.SubnetListResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.SubnetResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "apis.SubnetPatchPayload": {
            "type": "object"
        },
        "apis.SubnetPayload": {
            "type": "object"
        },
        "apis.SubnetResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "apis.UserListResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.OrgResponse"
                    }
                }
            }
        },
        "apis.UserPatchPayload": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "apis.UserPayload": {
            "type": "object",
            "properties": {
                "org": {
                    "$ref": "#/definitions/apis.BaseReference"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "apis.UserResponse": {
            "type": "object",
            "properties": {
                "org": {
                    "$ref": "#/definitions/apis.BaseReference"
                },
                "role": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/apis.BaseReference"
                }
            }
        },
        "apis.VPCListResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "vpcs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.VPCResponse"
                    }
                }
            }
        },
        "apis.VPCPatchPayload": {
            "type": "object"
        },
        "apis.VPCPayload": {
            "type": "object"
        },
        "apis.VPCResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.BaseReference"
                    }
                }
            }
        },
        "apis.VolumeListResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apis.VPCResponse"
                    }
                }
            }
        },
        "apis.VolumePatchPayload": {
            "type": "object"
        },
        "apis.VolumePayload": {
            "type": "object"
        },
        "apis.VolumeResponse": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "integer"
                },
                "disk": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "memory": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}