// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NetworksItemsProvider networks items provider
// swagger:model networksItemsProvider
type NetworksItemsProvider struct {

	// network type
	// Enum: [vlan vxlan gre flat]
	NetworkType string `json:"network_type,omitempty"`

	// segmentation id
	// Maximum: 1.6777215e+07
	// Minimum: 0
	SegmentationID *int64 `json:"segmentation_id,omitempty"`
}

// Validate validates this networks items provider
func (m *NetworksItemsProvider) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNetworkType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSegmentationID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var networksItemsProviderTypeNetworkTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["vlan","vxlan","gre","flat"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		networksItemsProviderTypeNetworkTypePropEnum = append(networksItemsProviderTypeNetworkTypePropEnum, v)
	}
}

const (

	// NetworksItemsProviderNetworkTypeVlan captures enum value "vlan"
	NetworksItemsProviderNetworkTypeVlan string = "vlan"

	// NetworksItemsProviderNetworkTypeVxlan captures enum value "vxlan"
	NetworksItemsProviderNetworkTypeVxlan string = "vxlan"

	// NetworksItemsProviderNetworkTypeGre captures enum value "gre"
	NetworksItemsProviderNetworkTypeGre string = "gre"

	// NetworksItemsProviderNetworkTypeFlat captures enum value "flat"
	NetworksItemsProviderNetworkTypeFlat string = "flat"
)

// prop value enum
func (m *NetworksItemsProvider) validateNetworkTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, networksItemsProviderTypeNetworkTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NetworksItemsProvider) validateNetworkType(formats strfmt.Registry) error {

	if swag.IsZero(m.NetworkType) { // not required
		return nil
	}

	// value enum
	if err := m.validateNetworkTypeEnum("network_type", "body", m.NetworkType); err != nil {
		return err
	}

	return nil
}

func (m *NetworksItemsProvider) validateSegmentationID(formats strfmt.Registry) error {

	if swag.IsZero(m.SegmentationID) { // not required
		return nil
	}

	if err := validate.MinimumInt("segmentation_id", "body", int64(*m.SegmentationID), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("segmentation_id", "body", int64(*m.SegmentationID), 1.6777215e+07, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NetworksItemsProvider) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NetworksItemsProvider) UnmarshalBinary(b []byte) error {
	var res NetworksItemsProvider
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
