// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VersionsValuesItemsLinksItems versions values items links items
// swagger:model versionsValuesItemsLinksItems
type VersionsValuesItemsLinksItems struct {

	// href
	// Pattern: ^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$
	Href string `json:"href,omitempty"`

	// rel
	// Enum: [self remote]
	Rel string `json:"rel,omitempty"`
}

// Validate validates this versions values items links items
func (m *VersionsValuesItemsLinksItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHref(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRel(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VersionsValuesItemsLinksItems) validateHref(formats strfmt.Registry) error {

	if swag.IsZero(m.Href) { // not required
		return nil
	}

	if err := validate.Pattern("href", "body", string(m.Href), `^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$`); err != nil {
		return err
	}

	return nil
}

var versionsValuesItemsLinksItemsTypeRelPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["self","remote"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		versionsValuesItemsLinksItemsTypeRelPropEnum = append(versionsValuesItemsLinksItemsTypeRelPropEnum, v)
	}
}

const (

	// VersionsValuesItemsLinksItemsRelSelf captures enum value "self"
	VersionsValuesItemsLinksItemsRelSelf string = "self"

	// VersionsValuesItemsLinksItemsRelRemote captures enum value "remote"
	VersionsValuesItemsLinksItemsRelRemote string = "remote"
)

// prop value enum
func (m *VersionsValuesItemsLinksItems) validateRelEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, versionsValuesItemsLinksItemsTypeRelPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *VersionsValuesItemsLinksItems) validateRel(formats strfmt.Registry) error {

	if swag.IsZero(m.Rel) { // not required
		return nil
	}

	// value enum
	if err := m.validateRelEnum("rel", "body", m.Rel); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *VersionsValuesItemsLinksItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VersionsValuesItemsLinksItems) UnmarshalBinary(b []byte) error {
	var res VersionsValuesItemsLinksItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
