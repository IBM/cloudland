// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateSubnetParamsBodySubnet create subnet params body subnet
//
// swagger:model createSubnetParamsBodySubnet
type CreateSubnetParamsBodySubnet struct {

	// cidr
	// Example: 10.0.0.1/24
	Cidr string `json:"cidr,omitempty"`

	// gateway ip
	// Example: 192.168.1.1
	GatewayIP string `json:"gateway_ip,omitempty"`

	// ip version
	// Example: 6
	// Enum: [4 6]
	IPVersion int64 `json:"ip_version,omitempty"`

	// name
	// Example: net1
	// Pattern: ^[A-Za-z][-A-Za-z0-9_]*$
	Name string `json:"name,omitempty"`

	// network id
	// Example: 1841f2adad3a4b4aa6485fb4e3a3fda1
	// Pattern: ^[A-Za-z][-A-Za-z0-9_]*$
	NetworkID string `json:"network_id,omitempty"`
}

// Validate validates this create subnet params body subnet
func (m *CreateSubnetParamsBodySubnet) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIPVersion(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNetworkID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var createSubnetParamsBodySubnetTypeIPVersionPropEnum []interface{}

func init() {
	var res []int64
	if err := json.Unmarshal([]byte(`[4,6]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createSubnetParamsBodySubnetTypeIPVersionPropEnum = append(createSubnetParamsBodySubnetTypeIPVersionPropEnum, v)
	}
}

// prop value enum
func (m *CreateSubnetParamsBodySubnet) validateIPVersionEnum(path, location string, value int64) error {
	if err := validate.EnumCase(path, location, value, createSubnetParamsBodySubnetTypeIPVersionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CreateSubnetParamsBodySubnet) validateIPVersion(formats strfmt.Registry) error {
	if swag.IsZero(m.IPVersion) { // not required
		return nil
	}

	// value enum
	if err := m.validateIPVersionEnum("ip_version", "body", m.IPVersion); err != nil {
		return err
	}

	return nil
}

func (m *CreateSubnetParamsBodySubnet) validateName(formats strfmt.Registry) error {
	if swag.IsZero(m.Name) { // not required
		return nil
	}

	if err := validate.Pattern("name", "body", m.Name, `^[A-Za-z][-A-Za-z0-9_]*$`); err != nil {
		return err
	}

	return nil
}

func (m *CreateSubnetParamsBodySubnet) validateNetworkID(formats strfmt.Registry) error {
	if swag.IsZero(m.NetworkID) { // not required
		return nil
	}

	if err := validate.Pattern("network_id", "body", m.NetworkID, `^[A-Za-z][-A-Za-z0-9_]*$`); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create subnet params body subnet based on context it is used
func (m *CreateSubnetParamsBodySubnet) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateSubnetParamsBodySubnet) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateSubnetParamsBodySubnet) UnmarshalBinary(b []byte) error {
	var res CreateSubnetParamsBodySubnet
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
