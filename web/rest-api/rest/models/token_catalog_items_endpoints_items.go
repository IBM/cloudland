// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TokenCatalogItemsEndpointsItems token catalog items endpoints items
// swagger:model tokenCatalogItemsEndpointsItems
type TokenCatalogItemsEndpointsItems struct {

	// id
	// Pattern: ^[A-Za-z][-A-Za-z0-9_]*$
	ID string `json:"id,omitempty"`

	// interface
	// Pattern: ^[A-Za-z][-A-Za-z0-9_]*$
	// Enum: [public private]
	Interface string `json:"interface,omitempty"`

	// region
	// Pattern: ^[A-Za-z][-A-Za-z0-9_]*$
	Region string `json:"region,omitempty"`

	// region id
	// Pattern: ^[A-Za-z][-A-Za-z0-9_]*$
	RegionID string `json:"region_id,omitempty"`

	// url
	// Pattern: ^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$
	URL string `json:"url,omitempty"`
}

// Validate validates this token catalog items endpoints items
func (m *TokenCatalogItemsEndpointsItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInterface(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRegion(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRegionID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateURL(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TokenCatalogItemsEndpointsItems) validateID(formats strfmt.Registry) error {

	if swag.IsZero(m.ID) { // not required
		return nil
	}

	if err := validate.Pattern("id", "body", string(m.ID), `^[A-Za-z][-A-Za-z0-9_]*$`); err != nil {
		return err
	}

	return nil
}

var tokenCatalogItemsEndpointsItemsTypeInterfacePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["public","private"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tokenCatalogItemsEndpointsItemsTypeInterfacePropEnum = append(tokenCatalogItemsEndpointsItemsTypeInterfacePropEnum, v)
	}
}

const (

	// TokenCatalogItemsEndpointsItemsInterfacePublic captures enum value "public"
	TokenCatalogItemsEndpointsItemsInterfacePublic string = "public"

	// TokenCatalogItemsEndpointsItemsInterfacePrivate captures enum value "private"
	TokenCatalogItemsEndpointsItemsInterfacePrivate string = "private"
)

// prop value enum
func (m *TokenCatalogItemsEndpointsItems) validateInterfaceEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, tokenCatalogItemsEndpointsItemsTypeInterfacePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *TokenCatalogItemsEndpointsItems) validateInterface(formats strfmt.Registry) error {

	if swag.IsZero(m.Interface) { // not required
		return nil
	}

	if err := validate.Pattern("interface", "body", string(m.Interface), `^[A-Za-z][-A-Za-z0-9_]*$`); err != nil {
		return err
	}

	// value enum
	if err := m.validateInterfaceEnum("interface", "body", m.Interface); err != nil {
		return err
	}

	return nil
}

func (m *TokenCatalogItemsEndpointsItems) validateRegion(formats strfmt.Registry) error {

	if swag.IsZero(m.Region) { // not required
		return nil
	}

	if err := validate.Pattern("region", "body", string(m.Region), `^[A-Za-z][-A-Za-z0-9_]*$`); err != nil {
		return err
	}

	return nil
}

func (m *TokenCatalogItemsEndpointsItems) validateRegionID(formats strfmt.Registry) error {

	if swag.IsZero(m.RegionID) { // not required
		return nil
	}

	if err := validate.Pattern("region_id", "body", string(m.RegionID), `^[A-Za-z][-A-Za-z0-9_]*$`); err != nil {
		return err
	}

	return nil
}

func (m *TokenCatalogItemsEndpointsItems) validateURL(formats strfmt.Registry) error {

	if swag.IsZero(m.URL) { // not required
		return nil
	}

	if err := validate.Pattern("url", "body", string(m.URL), `^http(s)?:\/\/([^\/?#]*)([^?#]*)(\?([^#]*))?(#(.*))?$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TokenCatalogItemsEndpointsItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TokenCatalogItemsEndpointsItems) UnmarshalBinary(b []byte) error {
	var res TokenCatalogItemsEndpointsItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
