// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateNetworkParamsBodyNetwork create network params body network
// swagger:model createNetworkParamsBodyNetwork
type CreateNetworkParamsBodyNetwork struct {

	// admin state up
	AdminStateUp bool `json:"admin_state_up,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// provider network type
	// Enum: [vlan vxlan gre flat]
	ProviderNetworkType string `json:"provider:network_type,omitempty"`

	// provider physical network
	// Enum: [public private]
	ProviderPhysicalNetwork string `json:"provider:physical_network,omitempty"`

	// provider segmentation id
	ProviderSegmentationID int64 `json:"provider:segmentation_id,omitempty"`

	// qos policy id
	QosPolicyID string `json:"qos_policy_id,omitempty"`

	// router external
	RouterExternal bool `json:"router:external,omitempty"`
}

// Validate validates this create network params body network
func (m *CreateNetworkParamsBodyNetwork) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProviderNetworkType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProviderPhysicalNetwork(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var createNetworkParamsBodyNetworkTypeProviderNetworkTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["vlan","vxlan","gre","flat"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createNetworkParamsBodyNetworkTypeProviderNetworkTypePropEnum = append(createNetworkParamsBodyNetworkTypeProviderNetworkTypePropEnum, v)
	}
}

const (

	// CreateNetworkParamsBodyNetworkProviderNetworkTypeVlan captures enum value "vlan"
	CreateNetworkParamsBodyNetworkProviderNetworkTypeVlan string = "vlan"

	// CreateNetworkParamsBodyNetworkProviderNetworkTypeVxlan captures enum value "vxlan"
	CreateNetworkParamsBodyNetworkProviderNetworkTypeVxlan string = "vxlan"

	// CreateNetworkParamsBodyNetworkProviderNetworkTypeGre captures enum value "gre"
	CreateNetworkParamsBodyNetworkProviderNetworkTypeGre string = "gre"

	// CreateNetworkParamsBodyNetworkProviderNetworkTypeFlat captures enum value "flat"
	CreateNetworkParamsBodyNetworkProviderNetworkTypeFlat string = "flat"
)

// prop value enum
func (m *CreateNetworkParamsBodyNetwork) validateProviderNetworkTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, createNetworkParamsBodyNetworkTypeProviderNetworkTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CreateNetworkParamsBodyNetwork) validateProviderNetworkType(formats strfmt.Registry) error {

	if swag.IsZero(m.ProviderNetworkType) { // not required
		return nil
	}

	// value enum
	if err := m.validateProviderNetworkTypeEnum("provider:network_type", "body", m.ProviderNetworkType); err != nil {
		return err
	}

	return nil
}

var createNetworkParamsBodyNetworkTypeProviderPhysicalNetworkPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["public","private"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createNetworkParamsBodyNetworkTypeProviderPhysicalNetworkPropEnum = append(createNetworkParamsBodyNetworkTypeProviderPhysicalNetworkPropEnum, v)
	}
}

const (

	// CreateNetworkParamsBodyNetworkProviderPhysicalNetworkPublic captures enum value "public"
	CreateNetworkParamsBodyNetworkProviderPhysicalNetworkPublic string = "public"

	// CreateNetworkParamsBodyNetworkProviderPhysicalNetworkPrivate captures enum value "private"
	CreateNetworkParamsBodyNetworkProviderPhysicalNetworkPrivate string = "private"
)

// prop value enum
func (m *CreateNetworkParamsBodyNetwork) validateProviderPhysicalNetworkEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, createNetworkParamsBodyNetworkTypeProviderPhysicalNetworkPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CreateNetworkParamsBodyNetwork) validateProviderPhysicalNetwork(formats strfmt.Registry) error {

	if swag.IsZero(m.ProviderPhysicalNetwork) { // not required
		return nil
	}

	// value enum
	if err := m.validateProviderPhysicalNetworkEnum("provider:physical_network", "body", m.ProviderPhysicalNetwork); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateNetworkParamsBodyNetwork) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateNetworkParamsBodyNetwork) UnmarshalBinary(b []byte) error {
	var res CreateNetworkParamsBodyNetwork
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
