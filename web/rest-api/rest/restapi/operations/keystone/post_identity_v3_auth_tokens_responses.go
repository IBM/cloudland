// Code generated by go-swagger; DO NOT EDIT.

package keystone

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	models "github.com/IBM/cloudland/web/rest-api/rest/models"
)

// PostIdentityV3AuthTokensCreatedCode is the HTTP code returned for type PostIdentityV3AuthTokensCreated
const PostIdentityV3AuthTokensCreatedCode int = 201

/*PostIdentityV3AuthTokensCreated successful operation

swagger:response postIdentityV3AuthTokensCreated
*/
type PostIdentityV3AuthTokensCreated struct {
	/*

	 */
	ContentLength int64 `json:"Content-Length"`
	/*X-Auth-Token

	  Default: "X-Auth-Token"
	*/
	Vary string `json:"Vary"`
	/*

	 */
	XSubjectToken string `json:"X-Subject-Token"`

	/*
	  In: Body
	*/
	Payload *models.PostIdentityV3AuthTokensCreatedBody `json:"body,omitempty"`
}

// NewPostIdentityV3AuthTokensCreated creates PostIdentityV3AuthTokensCreated with default headers values
func NewPostIdentityV3AuthTokensCreated() *PostIdentityV3AuthTokensCreated {

	var (
		// initialize headers with default values

		varyDefault = string("X-Auth-Token")
	)

	return &PostIdentityV3AuthTokensCreated{

		Vary: varyDefault,
	}
}

// WithContentLength adds the contentLength to the post identity v3 auth tokens created response
func (o *PostIdentityV3AuthTokensCreated) WithContentLength(contentLength int64) *PostIdentityV3AuthTokensCreated {
	o.ContentLength = contentLength
	return o
}

// SetContentLength sets the contentLength to the post identity v3 auth tokens created response
func (o *PostIdentityV3AuthTokensCreated) SetContentLength(contentLength int64) {
	o.ContentLength = contentLength
}

// WithVary adds the vary to the post identity v3 auth tokens created response
func (o *PostIdentityV3AuthTokensCreated) WithVary(vary string) *PostIdentityV3AuthTokensCreated {
	o.Vary = vary
	return o
}

// SetVary sets the vary to the post identity v3 auth tokens created response
func (o *PostIdentityV3AuthTokensCreated) SetVary(vary string) {
	o.Vary = vary
}

// WithXSubjectToken adds the xSubjectToken to the post identity v3 auth tokens created response
func (o *PostIdentityV3AuthTokensCreated) WithXSubjectToken(xSubjectToken string) *PostIdentityV3AuthTokensCreated {
	o.XSubjectToken = xSubjectToken
	return o
}

// SetXSubjectToken sets the xSubjectToken to the post identity v3 auth tokens created response
func (o *PostIdentityV3AuthTokensCreated) SetXSubjectToken(xSubjectToken string) {
	o.XSubjectToken = xSubjectToken
}

// WithPayload adds the payload to the post identity v3 auth tokens created response
func (o *PostIdentityV3AuthTokensCreated) WithPayload(payload *models.PostIdentityV3AuthTokensCreatedBody) *PostIdentityV3AuthTokensCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post identity v3 auth tokens created response
func (o *PostIdentityV3AuthTokensCreated) SetPayload(payload *models.PostIdentityV3AuthTokensCreatedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostIdentityV3AuthTokensCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Content-Length

	contentLength := swag.FormatInt64(o.ContentLength)
	if contentLength != "" {
		rw.Header().Set("Content-Length", contentLength)
	}

	// response header Vary

	vary := o.Vary
	if vary != "" {
		rw.Header().Set("Vary", vary)
	}

	// response header X-Subject-Token

	xSubjectToken := o.XSubjectToken
	if xSubjectToken != "" {
		rw.Header().Set("X-Subject-Token", xSubjectToken)
	}

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
