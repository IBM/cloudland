// Code generated by go-swagger; DO NOT EDIT.

package keystone

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/IBM/cloudland/web/rest-api/rest/models"
)

// PostAuthTokensReader is a Reader for the PostAuthTokens structure.
type PostAuthTokensReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAuthTokensReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostAuthTokensCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostAuthTokensCreated creates a PostAuthTokensCreated with default headers values
func NewPostAuthTokensCreated() *PostAuthTokensCreated {
	return &PostAuthTokensCreated{
		Vary: "X-Auth-Token",
	}
}

/*PostAuthTokensCreated handles this case with default header values.

successful operation
*/
type PostAuthTokensCreated struct {
	ContentLength int64
	/*X-Auth-Token
	 */
	Vary string

	XSubjectToken string

	Payload *models.PostAuthTokensCreatedBody
}

func (o *PostAuthTokensCreated) Error() string {
	return fmt.Sprintf("[POST /auth/tokens][%d] postAuthTokensCreated  %+v", 201, o.Payload)
}

func (o *PostAuthTokensCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Content-Length
	contentLength, err := swag.ConvertInt64(response.GetHeader("Content-Length"))
	if err != nil {
		return errors.InvalidType("Content-Length", "header", "int64", response.GetHeader("Content-Length"))
	}
	o.ContentLength = contentLength

	// response header Vary
	o.Vary = response.GetHeader("Vary")

	// response header X-Subject-Token
	o.XSubjectToken = response.GetHeader("X-Subject-Token")

	o.Payload = new(models.PostAuthTokensCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
