- name: creates cloudland directory
  file:
    path: "{{ item }}"
    state: directory
    owner: cland
  with_items:
    - /opt/cloudland
    - /usr/bin
  tags: [sync]

- name: synchronize cloudland and grpc
  synchronize:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    rsync_opts: "--exclude=cache,--exclude=log,--exclude=db"
  with_items:
    - {src: '/opt/cloudland', dest: '/opt', owner: 'cland'}
    - {src: '/usr/local', dest: '/usr', owner: 'cland'}
  tags: [sync]

- name: copy sci binaries
  copy: 
    src: /opt/sci
    dest: /opt
    mode: preserve
  tags: [sci]

- name: create directores
  file:
    path: "{{ item }}"
    state: directory
    owner: cland
    group: cland
  with_items:
    - '/opt/cloudland/cache'
    - '/opt/cloudland/cache/image'
    - '/opt/cloudland/cache/instance'
    - '/opt/cloudland/cache/router'
  tags: [fe_dir]

- name: copy cloudland and sci binaries
  copy: 
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
    mode: preserve
  with_items:
    - {src: '/opt/cloudland/lib64', dest: '/opt/cloudland', owner: 'cland'}
    - {src: '/opt/cloudland/bin', dest: '/opt/cloudland', owner: 'cland'}
    - {src: '/opt/cloudland/scripts', dest: '/opt/cloudland', owner: 'cland'}
    - {src: '/opt/sci', dest: '/opt', owner: 'root'}
  tags: [fe_bin]

- name: generate host file
  template:
    src: host.list.j2
    dest: /opt/cloudland/etc/host.list
  tags: [fe_srv]

- name: copy service file
  copy: 
    src: cloudland.service
    dest: /lib/systemd/system
    mode: preserve
  tags: [fe_srv]

- name: create cloudland environment file
  template:
    src: cloudland.j2
    dest: /etc/sysconfig/cloudland
  tags: [fe_srv]
 
- name: start cloudland
  systemd: 
    name: cloudland
    enabled: yes
    daemon_reload: yes
    state: restarted
  tags: [fe_srv]

- name: Allow cland necessary ports
  script: firewall.sh
  tags: [firewall]
  ignore_errors: yes
