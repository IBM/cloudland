- name: install packages
  yum: 
    name: ['@^Virtualization Host', 'genisoimage', 'sqlite', 'keepalived', 'jq', 'vconfig', 'git', 'NetworkManager', 'bridge-utils', 'python-pip', 'net-tools', 'iptables-services']
    state: present
  tags: [be_pkg]

- pip:
    name: pyparsing
  tags: [be_pkg]

- name: creates cloudland directory
  file:
    path: "{{ item }}"
    state: directory
    owner: cland
  with_items:
    - /opt/cloudland
    - /opt/cloudland/cache
    - /opt/cloudland/cache/image
    - /opt/cloudland/cache/instance
    - /opt/cloudland/cache/meta
    - /opt/cloudland/cache/router
    - /opt/cloudland/cache/volume
    - /opt/cloudland/cache/xml
  tags: [sync]

- name: synchronize cloudland and grpc
  synchronize:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    rsync_opts: "--exclude=cache,--exclude=log,--exclude=db"
  with_items:
    - {src: '/opt/cloudland', dest: '/opt', owner: 'cland'}
  tags: [sync]

- name: copy sci binaries
  copy: 
    src: /opt/sci
    dest: /opt
    mode: preserve
  tags: [sci]

- name: create cloudlet environment file
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
  with_items:
    - {src: 'cloudlet.j2', dest: '/etc/sysconfig/cloudlet', owner: 'root'}
    - {src: 'cloudrc.local.j2', dest: '/opt/cloudland/scripts/cloudrc.local', owner: 'cland'}
  tags: [be_conf]
 
- name: copy service file
  copy: 
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: preserve
  with_items:
    - {src: 'cloudlet.service', dest: '/lib/systemd/system', owner: 'root'}
    - {src: 'scid.service', dest: '/lib/systemd/system', owner: 'root'}
    - {src: 'recover_onboot.service', dest: '/lib/systemd/system', owner: 'root'}
  tags: [be_srv]

- name: start cloudlet services
  systemd: 
    name: "{{ item }}"
    enabled: yes
    daemon_reload: yes
    state: restarted
  with_items:
    - 'libvirtd'
    - 'NetworkManager'
    - 'scid'
    - 'cloudlet'
  tags: [be_srv]

- name: start cloudlet services
  systemd: 
    name: recover_onboot
    enabled: yes
    daemon_reload: yes
    state: stopped
  tags: [be_srv]

- name: mask firewalld service
  systemd:
    service: firewalld
    masked: yes
    state: stopped
  tags: [firewall]
  ignore_errors: yes

- name: Allow cland necessary ports
  script: firewall.sh
  tags: [firewall]
  ignore_errors: yes
