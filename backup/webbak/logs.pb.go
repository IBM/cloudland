// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logs.proto

package logs

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_782e6d65c19305b4, []int{0}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

type ListReply struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReply) Reset()         { *m = ListReply{} }
func (m *ListReply) String() string { return proto.CompactTextString(m) }
func (*ListReply) ProtoMessage()    {}
func (*ListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_782e6d65c19305b4, []int{1}
}

func (m *ListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReply.Unmarshal(m, b)
}
func (m *ListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReply.Marshal(b, m, deterministic)
}
func (m *ListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReply.Merge(m, src)
}
func (m *ListReply) XXX_Size() int {
	return xxx_messageInfo_ListReply.Size(m)
}
func (m *ListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReply.DiscardUnknown(m)
}

var xxx_messageInfo_ListReply proto.InternalMessageInfo

func (m *ListReply) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ListRequest)(nil), "com.ibm.cloudland.sca.logs.ListRequest")
	proto.RegisterType((*ListReply)(nil), "com.ibm.cloudland.sca.logs.ListReply")
}

func init() { proto.RegisterFile("logs.proto", fileDescriptor_782e6d65c19305b4) }

var fileDescriptor_782e6d65c19305b4 = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0xc9, 0x4f, 0x2f,
	0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0x4a, 0xce, 0xcf, 0xd5, 0xcb, 0x4c, 0xca, 0xd5,
	0x4b, 0xce, 0xc9, 0x2f, 0x4d, 0xc9, 0x49, 0xcc, 0x4b, 0xd1, 0x2b, 0x4e, 0x4e, 0xd4, 0x03, 0xa9,
	0x50, 0xe2, 0xe5, 0xe2, 0xf6, 0xc9, 0x2c, 0x2e, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x51,
	0x92, 0xe7, 0xe2, 0x84, 0x70, 0x0b, 0x72, 0x2a, 0x85, 0x84, 0xb8, 0x58, 0x52, 0x12, 0x4b, 0x12,
	0x25, 0x18, 0x15, 0x18, 0x35, 0x78, 0x82, 0xc0, 0x6c, 0xa3, 0x5c, 0x2e, 0xfe, 0x90, 0xa2, 0xc4,
	0xe4, 0x54, 0xc7, 0xf4, 0xd4, 0xbc, 0x12, 0xc7, 0x94, 0xdc, 0xcc, 0x3c, 0xa1, 0x28, 0x2e, 0x16,
	0x90, 0x1e, 0x21, 0x75, 0x3d, 0xdc, 0xf6, 0xe8, 0x21, 0x59, 0x22, 0xa5, 0x4a, 0x58, 0x61, 0x41,
	0x4e, 0xa5, 0x12, 0x83, 0x01, 0xa3, 0x13, 0x5b, 0x14, 0x0b, 0x48, 0x34, 0x89, 0x0d, 0xec, 0x13,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x54, 0x9c, 0x29, 0xb6, 0xd7, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TraceAgentAdminClient is the client API for TraceAgentAdmin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TraceAgentAdminClient interface {
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (TraceAgentAdmin_ListClient, error)
}

type traceAgentAdminClient struct {
	cc *grpc.ClientConn
}

func NewTraceAgentAdminClient(cc *grpc.ClientConn) TraceAgentAdminClient {
	return &traceAgentAdminClient{cc}
}

func (c *traceAgentAdminClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (TraceAgentAdmin_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TraceAgentAdmin_serviceDesc.Streams[0], "/com.ibm.cloudland.sca.logs.TraceAgentAdmin/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &traceAgentAdminListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TraceAgentAdmin_ListClient interface {
	Recv() (*ListReply, error)
	grpc.ClientStream
}

type traceAgentAdminListClient struct {
	grpc.ClientStream
}

func (x *traceAgentAdminListClient) Recv() (*ListReply, error) {
	m := new(ListReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TraceAgentAdminServer is the server API for TraceAgentAdmin service.
type TraceAgentAdminServer interface {
	List(*ListRequest, TraceAgentAdmin_ListServer) error
}

// UnimplementedTraceAgentAdminServer can be embedded to have forward compatible implementations.
type UnimplementedTraceAgentAdminServer struct {
}

func (*UnimplementedTraceAgentAdminServer) List(req *ListRequest, srv TraceAgentAdmin_ListServer) error {
	return status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterTraceAgentAdminServer(s *grpc.Server, srv TraceAgentAdminServer) {
	s.RegisterService(&_TraceAgentAdmin_serviceDesc, srv)
}

func _TraceAgentAdmin_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TraceAgentAdminServer).List(m, &traceAgentAdminListServer{stream})
}

type TraceAgentAdmin_ListServer interface {
	Send(*ListReply) error
	grpc.ServerStream
}

type traceAgentAdminListServer struct {
	grpc.ServerStream
}

func (x *traceAgentAdminListServer) Send(m *ListReply) error {
	return x.ServerStream.SendMsg(m)
}

var _TraceAgentAdmin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.ibm.cloudland.sca.logs.TraceAgentAdmin",
	HandlerType: (*TraceAgentAdminServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _TraceAgentAdmin_List_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "logs.proto",
}
