// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateImageMemberParamsBody The image ID
// swagger:model updateImageMemberParamsBody
type UpdateImageMemberParamsBody struct {

	// status
	// Enum: [pending accepted rejected]
	Status string `json:"status,omitempty"`
}

// Validate validates this update image member params body
func (m *UpdateImageMemberParamsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var updateImageMemberParamsBodyTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["pending","accepted","rejected"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		updateImageMemberParamsBodyTypeStatusPropEnum = append(updateImageMemberParamsBodyTypeStatusPropEnum, v)
	}
}

const (

	// UpdateImageMemberParamsBodyStatusPending captures enum value "pending"
	UpdateImageMemberParamsBodyStatusPending string = "pending"

	// UpdateImageMemberParamsBodyStatusAccepted captures enum value "accepted"
	UpdateImageMemberParamsBodyStatusAccepted string = "accepted"

	// UpdateImageMemberParamsBodyStatusRejected captures enum value "rejected"
	UpdateImageMemberParamsBodyStatusRejected string = "rejected"
)

// prop value enum
func (m *UpdateImageMemberParamsBody) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, updateImageMemberParamsBodyTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *UpdateImageMemberParamsBody) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UpdateImageMemberParamsBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateImageMemberParamsBody) UnmarshalBinary(b []byte) error {
	var res UpdateImageMemberParamsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
