// Code generated by protoc-gen-go. DO NOT EDIT.
// source: targets.proto

package targets

import (
	context "context"
	fmt "fmt"
	releases "github.com/IBM/cloudland/web/sca/releases"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type State int32

const (
	State_CREATED      State = 0
	State_DEPLOYED     State = 1
	State_RUNNING      State = 2
	State_MAINTAINENCE State = 3
	State_UPDATED      State = 4
	State_DELETED      State = 5
)

var State_name = map[int32]string{
	0: "CREATED",
	1: "DEPLOYED",
	2: "RUNNING",
	3: "MAINTAINENCE",
	4: "UPDATED",
	5: "DELETED",
}

var State_value = map[string]int32{
	"CREATED":      0,
	"DEPLOYED":     1,
	"RUNNING":      2,
	"MAINTAINENCE": 3,
	"UPDATED":      4,
	"DELETED":      5,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}

func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4009e2e15debba2c, []int{0}
}

type Env struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Env) Reset()         { *m = Env{} }
func (m *Env) String() string { return proto.CompactTextString(m) }
func (*Env) ProtoMessage()    {}
func (*Env) Descriptor() ([]byte, []int) {
	return fileDescriptor_4009e2e15debba2c, []int{0}
}

func (m *Env) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Env.Unmarshal(m, b)
}
func (m *Env) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Env.Marshal(b, m, deterministic)
}
func (m *Env) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Env.Merge(m, src)
}
func (m *Env) XXX_Size() int {
	return xxx_messageInfo_Env.Size(m)
}
func (m *Env) XXX_DiscardUnknown() {
	xxx_messageInfo_Env.DiscardUnknown(m)
}

var xxx_messageInfo_Env proto.InternalMessageInfo

func (m *Env) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Env) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type EnvsRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Env                  *Env     `protobuf:"bytes,2,opt,name=env,proto3" json:"env,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnvsRequest) Reset()         { *m = EnvsRequest{} }
func (m *EnvsRequest) String() string { return proto.CompactTextString(m) }
func (*EnvsRequest) ProtoMessage()    {}
func (*EnvsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4009e2e15debba2c, []int{1}
}

func (m *EnvsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnvsRequest.Unmarshal(m, b)
}
func (m *EnvsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnvsRequest.Marshal(b, m, deterministic)
}
func (m *EnvsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvsRequest.Merge(m, src)
}
func (m *EnvsRequest) XXX_Size() int {
	return xxx_messageInfo_EnvsRequest.Size(m)
}
func (m *EnvsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnvsRequest proto.InternalMessageInfo

func (m *EnvsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EnvsRequest) GetEnv() *Env {
	if m != nil {
		return m.Env
	}
	return nil
}

type Target struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State                State             `protobuf:"varint,2,opt,name=state,proto3,enum=com.github.ibm.cloudland.sca.targets.State" json:"state,omitempty"`
	Hosts                []*Host           `protobuf:"bytes,4,rep,name=hosts,proto3" json:"hosts,omitempty"`
	Release              *releases.Release `protobuf:"bytes,5,opt,name=release,proto3" json:"release,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Target) Reset()         { *m = Target{} }
func (m *Target) String() string { return proto.CompactTextString(m) }
func (*Target) ProtoMessage()    {}
func (*Target) Descriptor() ([]byte, []int) {
	return fileDescriptor_4009e2e15debba2c, []int{2}
}

func (m *Target) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Target.Unmarshal(m, b)
}
func (m *Target) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Target.Marshal(b, m, deterministic)
}
func (m *Target) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Target.Merge(m, src)
}
func (m *Target) XXX_Size() int {
	return xxx_messageInfo_Target.Size(m)
}
func (m *Target) XXX_DiscardUnknown() {
	xxx_messageInfo_Target.DiscardUnknown(m)
}

var xxx_messageInfo_Target proto.InternalMessageInfo

func (m *Target) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Target) GetState() State {
	if m != nil {
		return m.State
	}
	return State_CREATED
}

func (m *Target) GetHosts() []*Host {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *Target) GetRelease() *releases.Release {
	if m != nil {
		return m.Release
	}
	return nil
}

type Host struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Group                string   `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Ip                   string   `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Host) Reset()         { *m = Host{} }
func (m *Host) String() string { return proto.CompactTextString(m) }
func (*Host) ProtoMessage()    {}
func (*Host) Descriptor() ([]byte, []int) {
	return fileDescriptor_4009e2e15debba2c, []int{3}
}

func (m *Host) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Host.Unmarshal(m, b)
}
func (m *Host) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Host.Marshal(b, m, deterministic)
}
func (m *Host) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Host.Merge(m, src)
}
func (m *Host) XXX_Size() int {
	return xxx_messageInfo_Host.Size(m)
}
func (m *Host) XXX_DiscardUnknown() {
	xxx_messageInfo_Host.DiscardUnknown(m)
}

var xxx_messageInfo_Host proto.InternalMessageInfo

func (m *Host) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Host) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *Host) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type Key struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Private              string   `protobuf:"bytes,2,opt,name=private,proto3" json:"private,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Key) Reset()         { *m = Key{} }
func (m *Key) String() string { return proto.CompactTextString(m) }
func (*Key) ProtoMessage()    {}
func (*Key) Descriptor() ([]byte, []int) {
	return fileDescriptor_4009e2e15debba2c, []int{4}
}

func (m *Key) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Key.Unmarshal(m, b)
}
func (m *Key) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Key.Marshal(b, m, deterministic)
}
func (m *Key) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Key.Merge(m, src)
}
func (m *Key) XXX_Size() int {
	return xxx_messageInfo_Key.Size(m)
}
func (m *Key) XXX_DiscardUnknown() {
	xxx_messageInfo_Key.DiscardUnknown(m)
}

var xxx_messageInfo_Key proto.InternalMessageInfo

func (m *Key) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Key) GetPrivate() string {
	if m != nil {
		return m.Private
	}
	return ""
}

type HostsRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Host                 *Host    `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostsRequest) Reset()         { *m = HostsRequest{} }
func (m *HostsRequest) String() string { return proto.CompactTextString(m) }
func (*HostsRequest) ProtoMessage()    {}
func (*HostsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4009e2e15debba2c, []int{5}
}

func (m *HostsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostsRequest.Unmarshal(m, b)
}
func (m *HostsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostsRequest.Marshal(b, m, deterministic)
}
func (m *HostsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostsRequest.Merge(m, src)
}
func (m *HostsRequest) XXX_Size() int {
	return xxx_messageInfo_HostsRequest.Size(m)
}
func (m *HostsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HostsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HostsRequest proto.InternalMessageInfo

func (m *HostsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HostsRequest) GetHost() *Host {
	if m != nil {
		return m.Host
	}
	return nil
}

type KeysRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key                  *Key     `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeysRequest) Reset()         { *m = KeysRequest{} }
func (m *KeysRequest) String() string { return proto.CompactTextString(m) }
func (*KeysRequest) ProtoMessage()    {}
func (*KeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4009e2e15debba2c, []int{6}
}

func (m *KeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeysRequest.Unmarshal(m, b)
}
func (m *KeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeysRequest.Marshal(b, m, deterministic)
}
func (m *KeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeysRequest.Merge(m, src)
}
func (m *KeysRequest) XXX_Size() int {
	return xxx_messageInfo_KeysRequest.Size(m)
}
func (m *KeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KeysRequest proto.InternalMessageInfo

func (m *KeysRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *KeysRequest) GetKey() *Key {
	if m != nil {
		return m.Key
	}
	return nil
}

type CreateRequest struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Release              *releases.Release `protobuf:"bytes,2,opt,name=release,proto3" json:"release,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4009e2e15debba2c, []int{7}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRequest) GetRelease() *releases.Release {
	if m != nil {
		return m.Release
	}
	return nil
}

type DeleteRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4009e2e15debba2c, []int{8}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4009e2e15debba2c, []int{9}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type DeployRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployRequest) Reset()         { *m = DeployRequest{} }
func (m *DeployRequest) String() string { return proto.CompactTextString(m) }
func (*DeployRequest) ProtoMessage()    {}
func (*DeployRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4009e2e15debba2c, []int{10}
}

func (m *DeployRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployRequest.Unmarshal(m, b)
}
func (m *DeployRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployRequest.Marshal(b, m, deterministic)
}
func (m *DeployRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployRequest.Merge(m, src)
}
func (m *DeployRequest) XXX_Size() int {
	return xxx_messageInfo_DeployRequest.Size(m)
}
func (m *DeployRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeployRequest proto.InternalMessageInfo

func (m *DeployRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4009e2e15debba2c, []int{11}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4009e2e15debba2c, []int{12}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("com.github.ibm.cloudland.sca.targets.State", State_name, State_value)
	proto.RegisterType((*Env)(nil), "com.github.ibm.cloudland.sca.targets.Env")
	proto.RegisterType((*EnvsRequest)(nil), "com.github.ibm.cloudland.sca.targets.EnvsRequest")
	proto.RegisterType((*Target)(nil), "com.github.ibm.cloudland.sca.targets.Target")
	proto.RegisterType((*Host)(nil), "com.github.ibm.cloudland.sca.targets.Host")
	proto.RegisterType((*Key)(nil), "com.github.ibm.cloudland.sca.targets.Key")
	proto.RegisterType((*HostsRequest)(nil), "com.github.ibm.cloudland.sca.targets.HostsRequest")
	proto.RegisterType((*KeysRequest)(nil), "com.github.ibm.cloudland.sca.targets.KeysRequest")
	proto.RegisterType((*CreateRequest)(nil), "com.github.ibm.cloudland.sca.targets.CreateRequest")
	proto.RegisterType((*DeleteRequest)(nil), "com.github.ibm.cloudland.sca.targets.DeleteRequest")
	proto.RegisterType((*UpdateRequest)(nil), "com.github.ibm.cloudland.sca.targets.UpdateRequest")
	proto.RegisterType((*DeployRequest)(nil), "com.github.ibm.cloudland.sca.targets.DeployRequest")
	proto.RegisterType((*GetRequest)(nil), "com.github.ibm.cloudland.sca.targets.GetRequest")
	proto.RegisterType((*ListRequest)(nil), "com.github.ibm.cloudland.sca.targets.ListRequest")
}

func init() { proto.RegisterFile("targets.proto", fileDescriptor_4009e2e15debba2c) }

var fileDescriptor_4009e2e15debba2c = []byte{
	// 629 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xdd, 0x6e, 0xd3, 0x4c,
	0x10, 0xfd, 0x1c, 0xdb, 0xc9, 0xd7, 0x71, 0x53, 0x45, 0x2b, 0x24, 0xac, 0x5c, 0x55, 0x86, 0x8b,
	0x52, 0x90, 0x1d, 0xd2, 0x4b, 0x04, 0x6a, 0x5a, 0x5b, 0x6d, 0x94, 0xd4, 0x54, 0x26, 0xb9, 0x00,
	0x24, 0x24, 0x27, 0x59, 0x52, 0x2b, 0xfe, 0xc3, 0xeb, 0x18, 0xe5, 0x25, 0x79, 0x11, 0x5e, 0x02,
	0xed, 0xda, 0x0e, 0x89, 0x14, 0xdc, 0x35, 0xdc, 0xed, 0x6c, 0xe6, 0xcc, 0xd9, 0x3d, 0x67, 0x3c,
	0x1b, 0x68, 0xa7, 0x6e, 0xb2, 0xc4, 0x29, 0xd1, 0xe3, 0x24, 0x4a, 0x23, 0xf4, 0x7c, 0x1e, 0x05,
	0xfa, 0xd2, 0x4b, 0x1f, 0xd6, 0x33, 0xdd, 0x9b, 0x05, 0xfa, 0xdc, 0x8f, 0xd6, 0x0b, 0xdf, 0x0d,
	0x17, 0x3a, 0x99, 0xbb, 0x7a, 0x91, 0xdb, 0x7d, 0x9a, 0x60, 0x1f, 0xbb, 0x04, 0x13, 0xa3, 0x5c,
	0xe4, 0x70, 0xcd, 0x00, 0xd1, 0x0a, 0x33, 0x84, 0x40, 0x0a, 0xdd, 0x00, 0xab, 0xc2, 0xa9, 0x70,
	0x76, 0xe4, 0xb0, 0x35, 0x7a, 0x02, 0x72, 0xe6, 0xfa, 0x6b, 0xac, 0x36, 0xd8, 0x66, 0x1e, 0x68,
	0x5f, 0x40, 0xb1, 0xc2, 0x8c, 0x38, 0xf8, 0xdb, 0x1a, 0x93, 0xf4, 0x20, 0xf0, 0x0d, 0x88, 0x38,
	0xcc, 0x18, 0x4c, 0xe9, 0xbf, 0xd0, 0x79, 0x0e, 0xa8, 0x5b, 0x61, 0xe6, 0x50, 0x94, 0xf6, 0x53,
	0x80, 0xe6, 0x84, 0x6d, 0x1e, 0xac, 0x3d, 0x00, 0x99, 0xa4, 0x6e, 0x9a, 0x1f, 0xea, 0xa4, 0xff,
	0x92, 0xaf, 0xfa, 0x07, 0x0a, 0x71, 0x72, 0x24, 0xba, 0x04, 0xf9, 0x21, 0x22, 0x29, 0x51, 0xa5,
	0x53, 0xf1, 0x4c, 0xe9, 0x9f, 0xf3, 0x95, 0xb8, 0x8d, 0x48, 0xea, 0xe4, 0x40, 0x74, 0x0b, 0xad,
	0x42, 0x46, 0x55, 0x66, 0x97, 0xd4, 0xab, 0x6b, 0x6c, 0x35, 0x77, 0xf2, 0x85, 0x53, 0xc2, 0xb5,
	0x4b, 0x90, 0x68, 0xe1, 0x3f, 0xe9, 0xbf, 0x4c, 0xa2, 0x75, 0x5c, 0xea, 0xcf, 0x02, 0x74, 0x02,
	0x0d, 0x2f, 0x56, 0x45, 0xb6, 0xd5, 0xf0, 0x62, 0xed, 0x02, 0xc4, 0x11, 0xde, 0x1c, 0x2c, 0xa0,
	0x42, 0x2b, 0x4e, 0xbc, 0xac, 0x54, 0xeb, 0xc8, 0x29, 0x43, 0x6d, 0x06, 0xc7, 0x94, 0xb6, 0xd2,
	0xc5, 0x77, 0x20, 0xd1, 0xdb, 0x16, 0x36, 0xd6, 0x51, 0x89, 0xe1, 0x68, 0xa3, 0x8c, 0xf0, 0xe6,
	0xb1, 0x46, 0x59, 0xe1, 0x4d, 0xbd, 0x46, 0x19, 0xe1, 0x8d, 0x43, 0x51, 0x5a, 0x00, 0xed, 0xeb,
	0x04, 0x53, 0x5f, 0x2b, 0x18, 0x76, 0x9c, 0x6a, 0xfc, 0x9b, 0x53, 0xcf, 0xa0, 0x6d, 0x62, 0x1f,
	0x57, 0xd2, 0x69, 0x6f, 0xa1, 0x3d, 0x8d, 0x17, 0x8f, 0x9c, 0x49, 0x85, 0x56, 0x86, 0x13, 0xe2,
	0x45, 0x61, 0x69, 0x4b, 0x11, 0xe6, 0x1c, 0xb1, 0x1f, 0x6d, 0xaa, 0x38, 0x4e, 0x01, 0x6e, 0x70,
	0x5a, 0x95, 0xd1, 0x06, 0x65, 0xec, 0x91, 0x32, 0xe5, 0xfc, 0x33, 0xc8, 0xac, 0xff, 0x91, 0x02,
	0xad, 0x6b, 0xc7, 0x1a, 0x4c, 0x2c, 0xb3, 0xf3, 0x1f, 0x3a, 0x86, 0xff, 0x4d, 0xeb, 0x7e, 0xfc,
	0xfe, 0xa3, 0x65, 0x76, 0x04, 0xfa, 0x93, 0x33, 0xb5, 0xed, 0xa1, 0x7d, 0xd3, 0x69, 0xa0, 0x0e,
	0x1c, 0xdf, 0x0d, 0x86, 0xf6, 0x64, 0x30, 0xb4, 0x2d, 0xfb, 0xda, 0xea, 0x88, 0xf4, 0xe7, 0xe9,
	0xbd, 0xc9, 0x90, 0x12, 0x0d, 0x4c, 0x6b, 0x6c, 0xd1, 0x40, 0xee, 0xff, 0x68, 0x81, 0x92, 0x7f,
	0xae, 0x83, 0x45, 0xe0, 0x85, 0x68, 0x05, 0xcd, 0xdc, 0x15, 0x74, 0xc1, 0xe7, 0xe7, 0x9e, 0x87,
	0xdd, 0x57, 0x7c, 0xa0, 0x62, 0x40, 0xac, 0xa0, 0x99, 0xcb, 0xcd, 0x4b, 0xb6, 0x67, 0x4e, 0x7d,
	0xb2, 0xbc, 0x01, 0x78, 0xc9, 0xf6, 0xda, 0xa5, 0x26, 0x99, 0x07, 0x12, 0xb5, 0x10, 0xbd, 0xe6,
	0x43, 0xed, 0xd8, 0x5d, 0x8f, 0xa8, 0x27, 0x20, 0x0c, 0xe2, 0x0d, 0x4e, 0x51, 0x8f, 0x0f, 0xf6,
	0xbb, 0xf5, 0xfe, 0x46, 0x3e, 0xda, 0xdb, 0xfc, 0xf2, 0xed, 0x7c, 0x09, 0x35, 0xc9, 0xbe, 0x82,
	0x44, 0x1f, 0x29, 0x5e, 0xf9, 0x76, 0x1e, 0xb4, 0x2e, 0xff, 0x7b, 0xd5, 0x13, 0x90, 0x07, 0x32,
	0x9b, 0xa3, 0xa8, 0xcf, 0x3f, 0x1e, 0xb7, 0x4c, 0x35, 0x46, 0x6a, 0x4f, 0xa0, 0x57, 0xa2, 0xe3,
	0x94, 0xf7, 0x4a, 0x3b, 0xa3, 0xb7, 0xcb, 0x3f, 0x59, 0x7b, 0xc2, 0xd5, 0xf9, 0xa7, 0xb3, 0x22,
	0x73, 0x1e, 0x05, 0xc6, 0xf0, 0xea, 0xce, 0xd8, 0x66, 0x1b, 0xdf, 0xf1, 0xcc, 0x20, 0x73, 0xd7,
	0x28, 0x10, 0xb3, 0x26, 0xfb, 0x0f, 0x71, 0xf1, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x83, 0x48, 0xe9,
	0x5e, 0x93, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TargetAdminClient is the client API for TargetAdmin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TargetAdminClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*Target, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*Target, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*Target, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (TargetAdmin_ListClient, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Target, error)
	Deploy(ctx context.Context, in *DeployRequest, opts ...grpc.CallOption) (*Target, error)
	Envs(ctx context.Context, in *EnvsRequest, opts ...grpc.CallOption) (TargetAdmin_EnvsClient, error)
	Hosts(ctx context.Context, in *HostsRequest, opts ...grpc.CallOption) (TargetAdmin_HostsClient, error)
	Keys(ctx context.Context, in *KeysRequest, opts ...grpc.CallOption) (TargetAdmin_KeysClient, error)
}

type targetAdminClient struct {
	cc *grpc.ClientConn
}

func NewTargetAdminClient(cc *grpc.ClientConn) TargetAdminClient {
	return &targetAdminClient{cc}
}

func (c *targetAdminClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*Target, error) {
	out := new(Target)
	err := c.cc.Invoke(ctx, "/com.github.ibm.cloudland.sca.targets.TargetAdmin/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *targetAdminClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*Target, error) {
	out := new(Target)
	err := c.cc.Invoke(ctx, "/com.github.ibm.cloudland.sca.targets.TargetAdmin/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *targetAdminClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*Target, error) {
	out := new(Target)
	err := c.cc.Invoke(ctx, "/com.github.ibm.cloudland.sca.targets.TargetAdmin/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *targetAdminClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (TargetAdmin_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TargetAdmin_serviceDesc.Streams[0], "/com.github.ibm.cloudland.sca.targets.TargetAdmin/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &targetAdminListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TargetAdmin_ListClient interface {
	Recv() (*Target, error)
	grpc.ClientStream
}

type targetAdminListClient struct {
	grpc.ClientStream
}

func (x *targetAdminListClient) Recv() (*Target, error) {
	m := new(Target)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *targetAdminClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Target, error) {
	out := new(Target)
	err := c.cc.Invoke(ctx, "/com.github.ibm.cloudland.sca.targets.TargetAdmin/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *targetAdminClient) Deploy(ctx context.Context, in *DeployRequest, opts ...grpc.CallOption) (*Target, error) {
	out := new(Target)
	err := c.cc.Invoke(ctx, "/com.github.ibm.cloudland.sca.targets.TargetAdmin/Deploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *targetAdminClient) Envs(ctx context.Context, in *EnvsRequest, opts ...grpc.CallOption) (TargetAdmin_EnvsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TargetAdmin_serviceDesc.Streams[1], "/com.github.ibm.cloudland.sca.targets.TargetAdmin/Envs", opts...)
	if err != nil {
		return nil, err
	}
	x := &targetAdminEnvsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TargetAdmin_EnvsClient interface {
	Recv() (*Env, error)
	grpc.ClientStream
}

type targetAdminEnvsClient struct {
	grpc.ClientStream
}

func (x *targetAdminEnvsClient) Recv() (*Env, error) {
	m := new(Env)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *targetAdminClient) Hosts(ctx context.Context, in *HostsRequest, opts ...grpc.CallOption) (TargetAdmin_HostsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TargetAdmin_serviceDesc.Streams[2], "/com.github.ibm.cloudland.sca.targets.TargetAdmin/Hosts", opts...)
	if err != nil {
		return nil, err
	}
	x := &targetAdminHostsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TargetAdmin_HostsClient interface {
	Recv() (*Host, error)
	grpc.ClientStream
}

type targetAdminHostsClient struct {
	grpc.ClientStream
}

func (x *targetAdminHostsClient) Recv() (*Host, error) {
	m := new(Host)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *targetAdminClient) Keys(ctx context.Context, in *KeysRequest, opts ...grpc.CallOption) (TargetAdmin_KeysClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TargetAdmin_serviceDesc.Streams[3], "/com.github.ibm.cloudland.sca.targets.TargetAdmin/Keys", opts...)
	if err != nil {
		return nil, err
	}
	x := &targetAdminKeysClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TargetAdmin_KeysClient interface {
	Recv() (*Key, error)
	grpc.ClientStream
}

type targetAdminKeysClient struct {
	grpc.ClientStream
}

func (x *targetAdminKeysClient) Recv() (*Key, error) {
	m := new(Key)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TargetAdminServer is the server API for TargetAdmin service.
type TargetAdminServer interface {
	Create(context.Context, *CreateRequest) (*Target, error)
	Update(context.Context, *UpdateRequest) (*Target, error)
	Delete(context.Context, *DeleteRequest) (*Target, error)
	List(*ListRequest, TargetAdmin_ListServer) error
	Get(context.Context, *GetRequest) (*Target, error)
	Deploy(context.Context, *DeployRequest) (*Target, error)
	Envs(*EnvsRequest, TargetAdmin_EnvsServer) error
	Hosts(*HostsRequest, TargetAdmin_HostsServer) error
	Keys(*KeysRequest, TargetAdmin_KeysServer) error
}

// UnimplementedTargetAdminServer can be embedded to have forward compatible implementations.
type UnimplementedTargetAdminServer struct {
}

func (*UnimplementedTargetAdminServer) Create(ctx context.Context, req *CreateRequest) (*Target, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedTargetAdminServer) Update(ctx context.Context, req *UpdateRequest) (*Target, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedTargetAdminServer) Delete(ctx context.Context, req *DeleteRequest) (*Target, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedTargetAdminServer) List(req *ListRequest, srv TargetAdmin_ListServer) error {
	return status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedTargetAdminServer) Get(ctx context.Context, req *GetRequest) (*Target, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedTargetAdminServer) Deploy(ctx context.Context, req *DeployRequest) (*Target, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Deploy not implemented")
}
func (*UnimplementedTargetAdminServer) Envs(req *EnvsRequest, srv TargetAdmin_EnvsServer) error {
	return status.Errorf(codes.Unimplemented, "method Envs not implemented")
}
func (*UnimplementedTargetAdminServer) Hosts(req *HostsRequest, srv TargetAdmin_HostsServer) error {
	return status.Errorf(codes.Unimplemented, "method Hosts not implemented")
}
func (*UnimplementedTargetAdminServer) Keys(req *KeysRequest, srv TargetAdmin_KeysServer) error {
	return status.Errorf(codes.Unimplemented, "method Keys not implemented")
}

func RegisterTargetAdminServer(s *grpc.Server, srv TargetAdminServer) {
	s.RegisterService(&_TargetAdmin_serviceDesc, srv)
}

func _TargetAdmin_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TargetAdminServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.ibm.cloudland.sca.targets.TargetAdmin/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TargetAdminServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TargetAdmin_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TargetAdminServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.ibm.cloudland.sca.targets.TargetAdmin/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TargetAdminServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TargetAdmin_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TargetAdminServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.ibm.cloudland.sca.targets.TargetAdmin/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TargetAdminServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TargetAdmin_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TargetAdminServer).List(m, &targetAdminListServer{stream})
}

type TargetAdmin_ListServer interface {
	Send(*Target) error
	grpc.ServerStream
}

type targetAdminListServer struct {
	grpc.ServerStream
}

func (x *targetAdminListServer) Send(m *Target) error {
	return x.ServerStream.SendMsg(m)
}

func _TargetAdmin_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TargetAdminServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.ibm.cloudland.sca.targets.TargetAdmin/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TargetAdminServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TargetAdmin_Deploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeployRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TargetAdminServer).Deploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.ibm.cloudland.sca.targets.TargetAdmin/Deploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TargetAdminServer).Deploy(ctx, req.(*DeployRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TargetAdmin_Envs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EnvsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TargetAdminServer).Envs(m, &targetAdminEnvsServer{stream})
}

type TargetAdmin_EnvsServer interface {
	Send(*Env) error
	grpc.ServerStream
}

type targetAdminEnvsServer struct {
	grpc.ServerStream
}

func (x *targetAdminEnvsServer) Send(m *Env) error {
	return x.ServerStream.SendMsg(m)
}

func _TargetAdmin_Hosts_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HostsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TargetAdminServer).Hosts(m, &targetAdminHostsServer{stream})
}

type TargetAdmin_HostsServer interface {
	Send(*Host) error
	grpc.ServerStream
}

type targetAdminHostsServer struct {
	grpc.ServerStream
}

func (x *targetAdminHostsServer) Send(m *Host) error {
	return x.ServerStream.SendMsg(m)
}

func _TargetAdmin_Keys_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(KeysRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TargetAdminServer).Keys(m, &targetAdminKeysServer{stream})
}

type TargetAdmin_KeysServer interface {
	Send(*Key) error
	grpc.ServerStream
}

type targetAdminKeysServer struct {
	grpc.ServerStream
}

func (x *targetAdminKeysServer) Send(m *Key) error {
	return x.ServerStream.SendMsg(m)
}

var _TargetAdmin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.github.ibm.cloudland.sca.targets.TargetAdmin",
	HandlerType: (*TargetAdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _TargetAdmin_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _TargetAdmin_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _TargetAdmin_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _TargetAdmin_Get_Handler,
		},
		{
			MethodName: "Deploy",
			Handler:    _TargetAdmin_Deploy_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _TargetAdmin_List_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Envs",
			Handler:       _TargetAdmin_Envs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Hosts",
			Handler:       _TargetAdmin_Hosts_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Keys",
			Handler:       _TargetAdmin_Keys_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "targets.proto",
}
